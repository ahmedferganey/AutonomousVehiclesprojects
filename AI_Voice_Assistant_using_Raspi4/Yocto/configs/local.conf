PATCHRESOLVE = "noop"
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    HALT,${TMPDIR},100M,1K \
    HALT,${DL_DIR},100M,1K \
    HALT,${SSTATE_DIR},100M,1K \
    HALT,/tmp,10M,1K"
CONF_VERSION = "2"
ACCEPT_FSL_EULA = "1"
USER_CLASSES ?= "buildstats"
OE_TERMINAL = "screen"
IMAGE_ROOTFS_EXTRA_SPACE = "5242880"
PACKAGE_CLASSES ?= "package_rpm"
PACKAGECONFIG:append:pn-qemu-system-native = " sdl"
IMAGE_FSTYPES = "tar.bz2 ext4 wic.bz2 wic.bmap"
BB_NUMBER_THREADS = "8"
PARALLEL_MAKE = "-j 4"

######################################################################################################

#GITHUB_TOKEN = "<>"
FETCH_CMD = "git -c http.postBuffer=2147483648"
GIT_CONFIG_OPTIONS = "-c core.fsync=true"
FETCHCMD_git = "git -c protocol.file.allow=always"
GIT_PROTOCOL = "https"
MIRRORS += "\
    git://anongit.freedesktop.org/vdpau/libvdpau https://gitlab.freedesktop.org/vdpau/libvdpau.git;protocol=https"
MIRRORS += " \
    http://liba52.sourceforge.net/files/ https://downloads.sourceforge.net/project/liba52/files/ \
    http://liba52.sourceforge.net/files/ http://ftp.debian.org/debian/pool/main/liba/liba52/ \
    http://liba52.sourceforge.net/files/ http://distfiles.gentoo.org/distfiles/ \
    http://liba52.sourceforge.net/files/ https://ftp.osuosl.org/pub/liba52/ \
    http://liba52.sourceforge.net/files/ https://archive.org/details/liba52/ \
"
MIRRORS += " \
    http://dist.schmorp.de/libptytty/ http://distfiles.gentoo.org/distfiles/ \
    http://dist.schmorp.de/libptytty/ http://ftp.debian.org/debian/pool/main/libp/libptytty/ \
    http://dist.schmorp.de/libptytty/ https://ftp.osuosl.org/pub/ \
    http://dist.schmorp.de/libptytty/ https://archive.org/details/libptytty/ \
"
MIRRORS += " \
    git://github.com/opencv/opencv.git https://gitlab.com/opencv/opencv.git \
    git://github.com/opencv/opencv_3rdparty.git https://gitlab.com/opencv/opencv_3rdparty.git \
"
######################################################################################################

MACHINE ??= "raspberrypi4-64"
DISTRO ?= "poky"
DISTRO_FEATURES:append = " \
    virtualization systemd seccomp wifi bluez5 pi-bluetooth clock-source \
    bluetooth linux-firmware-bcm43430 linux-firmware-brcmfmac43430 \
    qt6 vc4graphics alsa opengl gstreamer x11 wayland multimedia gplv3 pam vulkan \
"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"


######################################################################################################

TCLIBC = "glibc"
SYSTEMD_PARALLEL_STARTUP = "1"
SYSTEMD_SERVICES_REMOVE = "printer.target NetworkManager"
SYSTEMD_DEFAULT_TARGET = "multi-user.target"
SYSTEMD_CPUSET = "0-3"

######################################################################################################

#PREFERRED_VERSION_linux-raspberrypi = "6.6.%"
PREFERRED_VERSION_linux-raspberrypi = "6.1.%"
PREFERRED_BRANCH_linux-raspberrypi = "rpi-6.1.y"
MIRRORS += " \
    git://github.com/raspberrypi/ https://github.com/raspberrypi/;protocol=https \n \
"
MIRRORS += " \
    git://github.com/opencv/ https://github.com/opencv/;protocol=https \n \
    git://github.com/opencv/opencv_3rdparty.git https://github.com/opencv/opencv_3rdparty.git;protocol=https \n \
    git://github.com/WeChatCV/ https://github.com/WeChatCV/;protocol=https \n \
"
GIT_SHALLOW = "1"
EXTRA_FIRMWARE += "brcm/brcmfmac43430-sdio.bin brcm/brcmfmac43455-sdio.bin"
MODULE_AUTOLOAD += " \
    brcmfmac mt7601u ath9k libertas libertas_sdio p54usb rtl8187 mwifiex_sdio \
    rtl8192cu rt2800usb zd1211rw rtl8192cu ath9k_htc ath6kl rndis_wlan \
    brcmutil rtl8xxxu carl9170 hostap \
"
KERNEL_MODULE_AUTOLOAD += " i2c-dev cfg80211 mac80211 brcmfmac mt7601u ath9k vc4 drm drm_kms_helper"
MODULES += "brcmfmac"
RPI_KERNEL_DEVICETREE = " \
    broadcom/bcm2711-rpi-4-b.dtb \
    broadcom/bcm2711-rpi-400.dtb \
    broadcom/bcm2711-rpi-cm4.dtb \
"
ENABLE_UART = "1"
ENABLE_I2C = "1"
ENABLE_SPI_BUS = "1"
ENABLE_WIFI = "1"
DISABLE_SPLASH = "1"
RPI_USE_U_BOOT = "1"
WIFI_COUNTRY = "EG"
KERNEL_IMAGETYPE_UBOOT ?= "Image"
SDIMG_KERNELIMAGE ?= "kernel8.img"
KERNEL_IMAGETYPE_DIRECT ?= "Image"
KERNEL_BOOTCMD ?= "booti"
KERNEL_DEVICETREE += "broadcom/bcm2711-rpi-4-b.dtb"
RPI_EXTRA_CONFIG = "dtoverlay=disable-bt\ndtoverlay=pi4-wifi\ngpu_mem=256"
MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS += "kernel-module-brcmfmac kernel-module-brcmfmac-wcc"
MACHINE_FEATURES += "pci usbhost ssh v4l2 evdev bluetooth network opengl i2c gpio spi autofs wifi vc4graphics secureboot tpm rtc"
MACHINE_EXTRA_RRECOMMENDS += " \
    linux-firmware-rpidistro-bcm43455 \
    bluez-firmware-rpidistro-bcm4345c0-hcd \
    linux-firmware-rpidistro-bcm43456 \
    bluez-firmware-rpidistro-bcm4345c5-hcd \
    kernel-module-bcm2835-v4l2 \
    linux-firmware-rpidistro-raspberrypi4 \
    kernel-module-r8152 kernel-module-ax88179 \
"
VC4DTBO ?= "vc4-kms-v3d"
APPEND += "dtoverlay=brcmfmac"
DISABLE_RPI_BOOT_LOGO = "1"
INIT_MANAGER = "systemd"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"

######################################################################################################
PREFERRED_VERSION_opencv = "4.11.%"
EXTRA_IMAGE_FEATURES += "tools-sdk dev-pkgs package-management debug-tweaks "
IMAGE_FEATURES += "tools-sdk ssh-server-openssh ssh-server-dropbear"
IMAGE_CLASSES += " qt6-qmake populate_sdk_qt6 qt6-cmake"

IMAGE_INSTALL += " \
    docker-ce systemd systemd-compat-units \
    python3 python3-pip python3-setuptools python3-wheel python3-pyaudio \
    python3-smbus python3-aiohttp python3-requests python3-requests-toolbelt \
    python3-click python3-pyjwt python3-numpy \
    packagegroup-core-ssh-openssh \
    packagegroup-core-full-cmdline \
    packagegroup-core-buildessential \
    hostapd bridge-utils dhcpcd iw i2c-tools bluez5 pi-bluetooth bluez5-testtools \
    alsa-utils wireless-regdb iproute2 networkd-dispatcher \
    linux-firmware-rpidistro-bcm43430 \
    util-linux net-tools lockdev ntp kmod sudo \
    htop nano bash shadow coreutils base-passwd which \
    wpa-supplicant apt run-postinsts \
    packagegroup-core-container network-config usergroup iptables \
    kernel-modules linux-firmware wayland udev-rules-rpi glibc \
    x11vnc rsync udev-rules-rpi make cmake \
    qtbase qtdeclarative qtsvg qttools qtmultimedia qtwayland qt3d qtquick3d \
    qtserialport qtserialbus qtnetworkauth qtmqtt qtcoap qtopcua qtpositioning qtsensors qtvirtualkeyboard \
    qtimageformats qttranslations qtcharts qtconnectivity qtdatavis3d qtwebsockets qtwebengine \
    liberation-fonts gstreamer1.0 gstreamer1.0-plugins-good gstreamer1.0-plugins-base gstreamer1.0-plugins-bad \
    gstreamer1.0-rtsp-server gstreamer1.0-vaapi mesa mesa-demos xrandr xf86-video-fbdev vulkan-loader vulkan-tools \
    gcc libgcc libstdc++  \
    ffmpeg libva  gstreamer1.0-libav libvdpau glib-2.0 libva-utils \
    gstreamer1.0-plugins-ugly gstreamer1.0-plugins-base-alsa \
    alsa-lib alsa-utils alsa-tools libasound libvorbis libxkbcommon \
    packagegroup-core-sdk \
    packagegroup-core-standalone-sdk-target \
    packagegroup-core-tools-debug \
    packagegroup-core-tools-profile \
    packagegroup-core-tools-testapps \
    packagegroup-core-x11 \
    packagegroup-core-x11-base \
    packagegroup-core-x11-xserver \
    packagegroup-core-weston \
    opencv openh264 x264 libopus \
"

# qtquick3dphysics removed (not available in Qt 6.2) 

# Qt6 Voice Assistant GUI Application (v2.0.0)
# Includes: TTS, Navigation, Climate Control, Entertainment, Camera Vision, User Profiles, Performance Dashboard
IMAGE_INSTALL += " qt6-voice-assistant"

CORE_IMAGE_EXTRA_INSTALL += " \
    packagegroup-core-nfs \
    packagegroup-core-ssh-dropbear \
"


######################################################################################################


QT_ALLOW_MISSING_TOOLS_PACKAGES = "ON"
LICENSE_FLAGS_ACCEPTED += "commercial commercial_qt6 commercial_ffmpeg commercial_gstreamer1.0-libav"

TOOLCHAIN_HOST_TASK += " \
    nativesdk-packagegroup-qt6-toolchain-host \
    nativesdk-packagegroup-qt6-toolchain-host-essentials \
    nativesdk-packagegroup-sdk-host \
    nativesdk-packagegroup-qt6-toolchain-host-addons \
"
TOOLCHAIN_TARGET_TASK += " glibc libstdc++ libgcc qtbase  "
TOOLCHAIN_TARGET_TASK += " \
    packagegroup-qt6-essentials \
    packagegroup-qt6-addons \
    packagegroup-qt6-modules \
"
PACKAGECONFIG:append:pn-qtbase = " \
    accessibility dbus fontconfig glib gui harfbuzz icu jpeg libinput openssl png udev widgets xkbcommon zlib zstd vulkan gl xcb eglfs kms gbm linuxfb \
"
PACKAGECONFIG:append:pn-qtmultimedia = " ffmpeg alsa gstreamer spatialaudio_quick3d"
PACKAGECONFIG:append:pn-gstreamer1.0-plugins-bad = " opencv openh264 x264"
PACKAGECONFIG:append:pn-ffmpeg = " alsa libopus x264 vaapi "
PACKAGECONFIG_pn-qtbase-native ??= " gui widgets jpeg png dbus openssl zlib zstd"
#FFMPEG_EXTRA_OECONF = "--enable-shared --disable-static --enable-gpl --enable-nonfree --enable-libopus --enable-vaapi --enable-libx264"
#EXTRA_OECONF:append:ffmpeg = "--enable-shared --disable-static --enable-gpl --enable-nonfree --enable-libopus --enable-vaapi --enable-libx264"
EXTRA_OECONF:append:pn-ffmpeg = "--enable-shared --disable-static --enable-gpl --enable-nonfree --enable-libopus --enable-vaapi --enable-libx264"
#PACKAGECONFIG:append:pn-gstreamer1.0-plugins-bad = " opencv"
PACKAGECONFIG_pn-gstreamer1.0-plugins-bad ??= " \
    orc bluez vulkan x11 wayland gl bz2 closedcaption curl dash dtls hls openssl sbc smoothstreaming sndfile ttml uvch264 webp rsvg faad  \
"
PACKAGECONFIG:append:pn-opencv = " gstreamer"
PACKAGECONFIG:append:pn-opencv = " dnn gapi gtk jpeg png tiff libav libv4l v4l"
EXTRA_OECONF:append:pn-opencv = " -DWITH_GSTREAMER=ON -DWITH_OBJDETECT=ON"
EXTRA_OECONF:append:pn-opencv = " \
    -DPYTHON3_INCLUDE_PATH=${STAGING_INCDIR}/${PYTHON_DIR}${PYTHON_ABI} \
    -DPYTHON3_NUMPY_INCLUDE_DIRS:PATH=${STAGING_LIBDIR}/${PYTHON_DIR}/site-packages/numpy/_core/include \
    -DCMAKE_VERBOSE_MAKEFILE=ON \
"
# TEMPORARILY DISABLED: OpenCV Python bindings cause NumPy header issues
# Will be re-enabled after fixing NumPy 2.x directory structure compatibility
#PACKAGECONFIG:append:pn-opencv = " python3"
IMAGE_INSTALL += " protobuf ade gtk+3 v4l-utils libavc1394 tiff libpng python3-numpy python3 cmake ninja swig"
CORE_IMAGE_EXTRA_INSTALL += " \
    python3 python3-pip python3-setuptools python3-wheel python3-pyaudio \
    python3-smbus python3-aiohttp python3-requests python3-requests-toolbelt \
    python3-click python3-pyjwt python3-numpy  \
"    
DEPENDS:append:pn-opencv = " python3-native python3-setuptools-native python3-numpy-native"

# TEMPORARILY DISABLED: TensorFlow Lite has ABSEIL CMake target missing issue
# Error: Target "libprotobuf-lite" links to "absl::absl_check" but target was not found
#IMAGE_INSTALL += " python3-tensorflow-lite libtensorflow-lite"
#DEPENDS:append:pn-python3-tensorflow-lite = " python3 python3-pip python3-setuptools python3-wheel python3-numpy"

# TEMPORARILY DISABLED: ONNXRuntime depends on OpenCV and TensorFlow Lite (both have errors)
# Will be re-enabled after fixing upstream dependencies
#IMAGE_INSTALL += " onnxruntime flatbuffers"
# PREFERRED_VERSION_flatbuffers = "1.12.0"  # Removed - using flatbuffers 2.0.0 from meta-oe
# PREFERRED_VERSION_cmake-native = "3.31.%"  # Removed - using cmake 3.22.3 from poky/meta
TOOLCHAIN_HOST_TASK += " nativesdk-cmake-dev"


######################################################################################################
# 
# Note: ML libraries (TensorFlow Lite, ONNXRuntime) and OpenCV Python bindings
# are disabled above (commented out) to resolve build errors.
# 
# The following remove statements are kept for safety but are redundant:
IMAGE_INSTALL:remove = " python3-tensorflow-lite libtensorflow-lite onnxruntime"
PACKAGECONFIG:remove:pn-opencv = " python3"
#
######################################################################################################
