###############################################################################################
###################################           V1           ####################################
###############################################################################################

# Machine and Distribution Settings
MACHINE ??= "raspberrypi4-64"
DISTRO ?= "poky"
DISTRO_FEATURES:append = " virtualization systemd seccomp wifi bluez5 pi-bluetooth clock-source \
    bluetooth linux-firmware-bcm43430 linux-firmware-brcmfmac43430 \
"
# networkmanager
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
TCLIBC = "glibc"



# Package Settings
PACKAGE_CLASSES ?= "package_rpm"
PACKAGECONFIG:append:pn-qemu-system-native = " sdl"



# Image Settings
# Enable additional image features
EXTRA_IMAGE_FEATURES += " package-management debug-tweaks "
## EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

# Add SSH server options
IMAGE_FEATURES += " ssh-server-openssh  ssh-server-dropbear "
## debug-tweaks

# Install required packages
IMAGE_INSTALL += " \
    docker-ce systemd systemd-compat-units \
    python3 python3-pip python3-setuptools python3-wheel python3-pyaudio \    
    python3-smbus python3-aiohttp python3-requests python3-requests-toolbelt \
    python3-click python3-pyjwt python3-numpy \    
    packagegroup-core-ssh-openssh \
    packagegroup-core-full-cmdline \
    packagegroup-core-buildessential \    
    hostapd bridge-utils dhcpcd iw i2c-tools bluez5 pi-bluetooth  bluez5-testtools \
    alsa-utils wireless-regdb iproute2 networkd-dispatcher \
    linux-firmware-rpidistro-bcm43430 linux-firmware-bcm43430 \
    util-linux net-tools lockdev ntp kmod sudo \
    htop nano bash shadow coreutils base-passwd which \
    wpa-supplicant apt run-postinsts \
    packagegroup-core-container network-config usergroup iptables \
    kernel-modules linux-firmware \
    wayland  \
    udev-rules-rpi   \
    glibc \
"

##  containerd runc minimal docker-ce  

# Additional installation for core image
CORE_IMAGE_EXTRA_INSTALL += " \
    docker-ce \
    packagegroup-core-nfs \
    packagegroup-core-ssh-dropbear \
"

IMAGE_FSTYPES = "tar.bz2 ext4 wic.bz2 wic.bmap"
EXTRA_FIRMWARE += "brcm/brcmfmac43430-sdio.bin brcm/brcmfmac43455-sdio.bin"
MODULE_AUTOLOAD += " \
    brcmfmac mt7601u ath9k libertas libertas_sdio p54usb rtl8187 mwifiex_sdio \
    rtl8192cu rt2800usb zd1211rw rtl8192cu ath9k_htc ath6kl rndis_wlan \
     brcmutil rtl8xxxu carl9170 hostap  \
"


# System Settings
BB_NUMBER_THREADS = "8"
PARALLEL_MAKE = "-j 8"
SYSTEMD_PARALLEL_STARTUP = "1"
SYSTEMD_SERVICES_REMOVE = "printer.target"
SYSTEMD_DEFAULT_TARGET = "multi-user.target"
SYSTEMD_CPUSET = "0-3"


# Git and Fetch Settings
FETCH_CMD = "git -c http.postBuffer=2147483648"
GIT_CONFIG_OPTIONS = "-c core.fsync=true"


# Kernel and Boot Settings
PREFERRED_VERSION_linux-raspberrypi = "6.1.%"
PREFERRED_BRANCH_linux-raspberrypi = "rpi-6.1.y"
RPI_KERNEL_DEVICETREE = " \
    broadcom/bcm2711-rpi-4-b.dtb \
    broadcom/bcm2711-rpi-400.dtb \
    broadcom/bcm2711-rpi-cm4.dtb \
    "
# UBOOT_CONFIG ?= "rpi_arm64_config"
# UBOOT_TUNE_CONFIG ?= "rpi_arm64_tune"
ENABLE_UART = "1"
ENABLE_I2C = "1"
ENABLE_SPI_BUS = "1"
ENABLE_WIFI = "1"
DISABLE_SPLASH = "1"
RPI_USE_U_BOOT = "1"
KERNEL_MODULE_AUTOLOAD += " i2c-dev cfg80211 mac80211 brcmfmac"
MODULES += "brcmfmac"
WIFI_COUNTRY = "EG"
KERNEL_IMAGETYPE_UBOOT ?= "Image"
SDIMG_KERNELIMAGE ?= "kernel8.img"
# UBOOT_MACHINE = "rpi_arm64_config"
KERNEL_IMAGETYPE_DIRECT ?= "Image"
KERNEL_BOOTCMD ?= "booti"
KERNEL_DEVICETREE += " \
    broadcom/bcm2711-rpi-4-b.dtb \
"
# RPI_BOOTLOADER ?= "u-boot"
# RPI_UBOOT_BINARY = "u-boot.bin"
RPI_EXTRA_CONFIG = "dtoverlay=disable-bt"
RPI_EXTRA_CONFIG = "dtoverlay=pi4-wifi"




# Recommended Kernel Modules
MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS += "kernel-module-brcmfmac"
MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS += "kernel-module-brcmfmac-wcc"
MACHINE_FEATURES += "pci usbhost ssh v4l2 evdev bluetooth network opengl i2c gpio spi autofs wifi"
MACHINE_EXTRA_RRECOMMENDS += "\
    linux-firmware-rpidistro-bcm43455 \
    bluez-firmware-rpidistro-bcm4345c0-hcd \
    linux-firmware-rpidistro-bcm43456 \
    bluez-firmware-rpidistro-bcm4345c5-hcd \
    alsa-utils \
    wpa-supplicant \
    kernel-module-bcm2835-v4l2 \
    linux-firmware-rpidistro-raspberrypi4 \
    bluez \    
    kernel-module-r8152 kernel-module-ax88179 \
"
# wpa-supplicant 

VC4DTBO ?= "vc4-kms-v3d"
# Raspberry Pi Settings
APPEND += "dtoverlay=brcmfmac"
DISABLE_RPI_BOOT_LOGO = "1"



# Networking and Services
MACHINE_FEATURES += " wifi virtualization i2c bluetooth usb-host secureboot tpm rtc vc4graphics"
INIT_MANAGER = "systemd"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"
# SYSTEMD_AUTO_ENABLE_pn-networkmanager = "enable"
SYSTEMD_SERVICES_REMOVE += "networkmanager"


# Additional Settings
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    HALT,${TMPDIR},100M,1K \
    HALT,${DL_DIR},100M,1K \
    HALT,${SSTATE_DIR},100M,1K \
    HALT,/tmp,10M,1K"
CONF_VERSION = "2"
ACCEPT_FSL_EULA = "1"
USER_CLASSES ?= "buildstats"

# Menuconfig option
OE_TERMINAL = "screen"



###############################################################################################
###################################           V2           ####################################
###############################################################################################
# IMAGE_ROOTFS_SIZE = "5242880"  # 5 GB total root filesystem size.
IMAGE_ROOTFS_EXTRA_SPACE = "5242880" 

### VNC ###
IMAGE_INSTALL += " x11vnc"


### Bluetooth  ###
CORE_IMAGE_EXTRA_INSTALL += " rsync "
IMAGE_INSTALL += "   udev-rules-rpi "

### Qt6 ###
IMAGE_INSTALL += " make cmake"
# Enable Qt6 in DISTRO_FEATURES
DISTRO_FEATURES:append = " qt6"
IMAGE_INSTALL += " \
    qtbase \
    qtdeclarative \
    qtsvg \
    qttools \
    qtmultimedia \
    qtwayland \
"
IMAGE_INSTALL += " \
    qt3d \
    qtquick3d \
    qtquick3dphysics \
"
IMAGE_INSTALL += " \
    qtserialport \
    qtserialbus \
"
IMAGE_INSTALL += " \
    qtnetworkauth \
    qtmqtt \
    qtcoap \
    qtopcua \
"
IMAGE_INSTALL += " \
    qtpositioning \
    qtsensors \
"
IMAGE_INSTALL += " \
    qtvirtualkeyboard \
"

IMAGE_INSTALL += " \
    qtimageformats   qttranslations  qtlocation qtcharts qtconnectivity  qtdatavis3d  qtwebsockets qtwebengine \
    liberation-fonts    \
"
IMAGE_INSTALL += "ffmpeg"


### Audio Streaming ###
#DISTRO_FEATURES:append = " pulseaudio"
#IMAGE_INSTALL += " pulseaudio alsa-lib alsa-plugins"


###############################################################################################
###################################           V3           ####################################
###############################################################################################

### Video ###
MACHINE_FEATURES += " vc4graphics"
HDMI_GROUP = "1"
HDMI_MODE = "4"
ENABLE_VC4GRAPHICS = "1"
DISABLE_OVERSCAN = "1"
GPU_MEM = "256"

### Sound and GPU ###
IMAGE_INSTALL += " \
    gstreamer1.0 gstreamer1.0-plugins-good gstreamer1.0-plugins-base gstreamer1.0-plugins-bad gstreamer1.0-rtsp-server \
    gstreamer1.0-vaapi mesa mesa-demos xrandr xf86-video-fbdev vulkan-loader vulkan-tools \
    xf86-input-libinput xf86-video-armsoc xf86-input-tslib ocl-icd \
"

# HOSTTOOLS += " ocl-icd-native"
DISTRO_FEATURES:append = " qt6 vc4graphics alsa opengl gstreamer x11 wayland multimedia gplv3"
LICENSE_FLAGS_ACCEPTED += " commercial commercial_gstreamer commercial_qt"


RPI_EXTRA_CONFIG:append = "\ngpu_mem=256"
SYSTEMD_SERVICES += " weston"
KERNEL_MODULE_AUTOLOAD += " mt7601u ath9k vc4 drm drm_kms_helper"


IMAGE_CLASSES += " qt6-qmake populate_sdk_qt6 qt6-cmake"
IMAGE_FEATURES += "tools-sdk"
IMAGE_INSTALL += " gcc libgcc libstdc++"


###############################################################################################
###################################           V4           ####################################
###############################################################################################

# Accept commercial licenses (e.g., ffmpeg)
LICENSE_FLAGS_ACCEPTED += "commercial commercial_qt6 commercial_ffmpeg commercial_gstreamer1.0-libav"

# Enable critical distro features
DISTRO_FEATURES += " \
    qt6 vc4graphics alsa  gstreamer   multimedia gplv3 wayland \
    wayland  opengl  wifi  pam  vulkan  x11 \
"


# Allow missing tools packages (useful for development)
QT_ALLOW_MISSING_TOOLS_PACKAGES = "ON"
EXTRA_IMAGE_FEATURES += "tools-sdk dev-pkgs"


IMAGE_INSTALL += " \
    packagegroup-core-sdk \
    packagegroup-core-standalone-sdk-target \
    packagegroup-core-tools-debug \
    packagegroup-core-tools-profile \
    packagegroup-core-tools-testapps \
    packagegroup-core-x11 \
    packagegroup-core-x11-base \
    packagegroup-core-x11-xserver \
    packagegroup-core-weston \
    qtsvg \
"
# Add Qt 6 toolchain to SDK
TOOLCHAIN_HOST_TASK += " \
    nativesdk-packagegroup-qt6-toolchain-host \
    nativesdk-packagegroup-qt6-toolchain-host-essentials \
    nativesdk-packagegroup-sdk-host \
    nativesdk-packagegroup-qt6-toolchain-host-addons \
"
TOOLCHAIN_TARGET_TASK += " glibc libstdc++ libgcc qtbase  "
TOOLCHAIN_TARGET_TASK += " \
    packagegroup-qt6-essentials \
    packagegroup-qt6-addons \
    packagegroup-qt6-modules \
    qtmultimedia-dev \
"

# Enable EGLFS and other Qt features
PACKAGECONFIG:append:pn-qtbase = " \
    alsa x11  multimedia accessibility dbus fontconfig glib gui harfbuzz icu jpeg libinput openssl png udev widgets xkbcommon zlib zstd vulkan gl xcb eglfs kms gbm linuxfb \
"
# For native build
PACKAGECONFIG_pn-qtbase-native ??= " gui widgets jpeg png dbus openssl zlib zstd"

# PACKAGECONFIG:append:pn-qtmultimedia = " gstreamer ffmpeg alsa pulseaudio"
PACKAGECONFIG:append:pn-qtmultimedia = " ffmpeg alsa "
PACKAGECONFIG:append:gstreamer = " ffmpeg"

PACKAGECONFIG:append:ffmpeg = " alsa libopus x264 "
IMAGE_INSTALL += " \ 
    ffmpeg \
"
# Set FFmpeg build options
FFMPEG_EXTRA_OECONF = "--enable-shared --disable-static --enable-gpl --enable-nonfree --enable-x264 --enable-libopus"


#PACKAGECONFIG:append:pn-gstreamer1.0-plugins-bad = " opencv"
PACKAGECONFIG_pn-gstreamer1.0-plugins-bad ??= " \
    orc bluez vulkan x11 wayland gl bz2 closedcaption curl dash dtls hls openssl sbc smoothstreaming sndfile ttml uvch264 webp rsvg faad  \
"
###############################################################################################
###################################           V5           ####################################
###############################################################################################
# this step for image install to solve alsa and pulse audio backend issue for qmultimedia and 
# make qmultmedia.bbapend
# https://forum.qt.io/topic/143533/qt6-5-qtmultimedia-alsa-issue/6
# to get all config  find . -name config.log
# bitbake -e qtbase | grep ^PACKAGECONFIG

IMAGE_INSTALL += " \ 
    libva  gstreamer1.0-libav libvdpau libva-initial  \
    glib-2.0 ffmpeg   libva-utils \
"

# Add Qt 6 and multimedia packages
IMAGE_INSTALL += " \
    qtmultimedia \
    qtmultimedia-plugins \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-plugins-base-alsa \
"
IMAGE_INSTALL += " \
    alsa-lib \
    alsa-utils \
    alsa-tools \
    libasound \
    libvorbis \
    libxkbcommon \
"

##################################################################################################################
